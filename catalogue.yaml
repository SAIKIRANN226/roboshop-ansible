- name: catalogue
  hosts: catalogue
  become: yes
  tasks:
  - name: disable old nodejs and enable nodejs  # justt search ansible dnf module
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y  # if we dont find in default ansible then we can use shell or command,command-->wont respect target machine and shell variables and environment (or) running outside the command ; shell--> it is like you logged in inside target machine directly and running command

  - name: Install nodejs
    ansible.builtin.dnf:
      name: nodejs 
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: extract catalogue application
    ansible.builtin.unarchive:  
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes    # we are just telling to ansible server we are already downloaded the file in the remote machine,so ansible no need to worry the file in your ansible controller,it is already there in the target machine just unarchive it

  - name: Install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: Copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: deamon realod and start
    ansible.builtin.systemd_service:
      daemon_reload: true

  # let's start after the data is loaded

  - name: Copy mongodb repo
    ansible.builtin.copy:
      src: mongodb.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: Install mongodb client
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: get the categories count
    ansible.builtin.command:  mongo --host mongodb.daws76s.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: product_count # the above large command is to get the catagories count and registering the product count in a variable register

  # - name: print the count
  #   ansible.builtin.debug:
  #     msg: "product count: {{product_count}}"

  - name: load catalogue data
    ansible.builtin.command: mongo --host mongodb.daws76s.online < /app/schema/catalogue.js
    when: product_count.stdout == "0" # keep double quotes that means if product count is 0 then only run and load the catagories otherwise ignore

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes


# to know if catalogue is connected to mongodb or not take sudo su - then  "tail -f /var/log/messages"